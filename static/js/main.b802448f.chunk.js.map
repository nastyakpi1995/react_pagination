{"version":3,"sources":["Header.js","Paginator.js","App.js","index.js"],"names":["Pagination","_ref","images","startRange","endRange","handleDecide","react_default","a","createElement","className","length","action","name","onClick","value","imgId","totals","page","perPage","onPageChange","imgStart","Header","aria-label","type","disabled","Array","from","map","total","i","react_router_dom","to","concat","activeClassName","href","slice","imag","alt","height","src","download_url","getContent","Object","asyncToGenerator","regenerator_default","mark","_callee","response","currentContent","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","App","state","currentPage","_this","setState","event","target","prevState","Math","ceil","_this2","_this$state","react_router","path","render","_ref2","match","Paginator","key","id","params","React","Component","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b802448f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({\n  images, startRange, endRange, handleDecide,\n}) => (\n  <div className=\"container\">\n    <h1 className=\"information\">\n      {startRange}\n          ...\n      {endRange }\n          of\n      { images.length}\n    </h1>\n    <form action=\"/\" className=\"adress-delivery__header\">\n      <span>images on pages</span>\n      <div\n        className=\"destination-details\"\n      >\n        <select\n          name=\"\"\n          onClick={handleDecide}\n          className=\"adress-delivery__destination-details\"\n        >\n          <option value={3}>3</option>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={15}>15</option>\n        </select>\n      </div>\n    </form>\n  </div>\n);\n\nPagination.propTypes = {\n  images: PropTypes.shape(\n    PropTypes.array,\n    PropTypes.object,\n  ).isRequired,\n  startRange: PropTypes.number.isRequired,\n  endRange: PropTypes.number.isRequired,\n  handleDecide: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport {\n  NavLink,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\n\nconst Pagination = ({\n  images, imgId, totals, page, perPage, onPageChange, handleDecide,\n}) => {\n  const startRange = (page) * perPage + 1;\n  let endRange = ((page + 1) * perPage);\n\n  endRange = endRange < images.length ? endRange : images.length;\n\n  const imgStart = startRange - 1;\n\n  return (\n    <div>\n      <div className=\"main__container\">\n        <Header\n          endRange={endRange}\n          images={images}\n          startRange={startRange}\n          handleDecide={handleDecide}\n        />\n        <nav aria-label=\"...\">\n          <ul className=\"page__ul\">\n            <li className=\"page-item disabled\">\n              <span className=\"page-link\">\n                <button\n                  type=\"button\"\n                  onClick={() => onPageChange(page - 1)}\n                  disabled={page < 1}\n                >\n                Prev\n                </button>\n              </span>\n            </li>\n            <li className=\"page-item\">\n              {Array.from(Array(totals)).map((total, i) => (\n                <NavLink\n                  className=\"page-link\"\n                  to={`/${i + 1}`}\n                  onClick={() => onPageChange(i)}\n                  activeClassName=\"hello\"\n                >\n                  {i + 1}\n                </NavLink>\n              ))}\n            </li>\n\n            <li className=\"page-item\">\n              <div\n                className=\"page-link\"\n                href=\"/#\"\n              >\n                <button\n                  type=\"button\"\n                  onClick={() => onPageChange(page + 1)}\n                  disabled={page >= totals - 1}\n                >\n                  Next\n                </button>\n              </div>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <p>\n        {(imgId && images.slice(imgStart, endRange)) && (\n          images.slice(imgStart, endRange).map(imag => (\n            <div className=\"product\">\n              <img\n                alt=\"images\"\n                className=\"product__img\"\n                height={300}\n                src={imag.download_url}\n              />\n            </div>\n          ))\n        )\n        }\n      </p>\n    </div>\n\n  );\n};\n\nPagination.propTypes = {\n  images: PropTypes.shape(\n    PropTypes.array,\n    PropTypes.object,\n  ).isRequired,\n  imgId: PropTypes.string.isRequired,\n  perPage: PropTypes.number.isRequired,\n  totals: PropTypes.number.isRequired,\n  page: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  handleDecide: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport {\n  Route, HashRouter,\n} from 'react-router-dom';\nimport './App.css';\nimport Pagination from './Paginator';\n\nconst getContent = async() => {\n  const response = await fetch('https://picsum.photos/v2/list?page=2&limit=42');\n  const currentContent = await response.json();\n\n  return currentContent;\n};\n\nclass App extends React.Component {\n  state = {\n    images: [],\n    page: 0,\n    perPage: 5,\n    totals: 0,\n  }\n\n  async componentDidMount() {\n    const images = await getContent();\n\n    this.setState(prevState => ({\n      images,\n      totals: Math.ceil(images.length / prevState.perPage),\n    }));\n  }\n\n  onPageChange = (currentPage) => {\n    this.setState({ page: currentPage });\n  };\n\n  handleDecide = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      perPage: value,\n      totals: Math.ceil(prevState.images.length / value),\n    }));\n  }\n\n  render() {\n    const {\n      images, page, perPage, totals,\n    } = this.state;\n\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Route\n            path=\"/:imgId?\"\n            render={({ match }) => (\n              <Pagination\n                key={images.id}\n                images={images}\n                imgId={match.params.imgId}\n                page={page}\n                onPageChange={this.onPageChange}\n                perPage={perPage}\n                totals={totals}\n                handleDecide={this.handleDecide}\n              />\n            )}\n          />\n        </div>\n      </HashRouter>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}